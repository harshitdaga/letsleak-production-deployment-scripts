user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        ##
        # Custome settings
        ##
        server_tokens off; # for security-by-obscurity: stop displaying nginx version

        # HTTP
        server {
            listen 80 default_server; # if this is not a default server, remove "default_server"
            listen [::]:80 default_server ipv6only=on;

            root /usr/share/nginx/html//serverIndex/; # root is irrelevant
            index index.html index.htm; # this is also irrelevant

            server_name #HOST_IP# letsleak.com www.letsleak.com; # the domain on which we want to host the application. Since we set "default_server" previously, nginx will answer all hosts anyway.
            error_page 403 404 /404.html;
            
            proxy_intercept_errors on;
            #proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;

            #General 
            more_clear_headers  'Server' 'X-Powered-By' 'X-Runtime' 'Date';
            #passenger_show_version_in_header off;
            server_tokens off;
        }

        ################################################
        # Admin Server
        ################################################
        server {
                listen 3050;
                listen [::]:3050;
                server_name #HOST_IP#;

                #General 
                more_clear_headers  'Server' 'X-Powered-By' 'X-Runtime' 'Date';
                passenger_show_version_in_header off;
                server_tokens off;

                # Tell Passenger where the app is.
                passenger_app_root /home/ubuntu/admin/snaps/current;
                passenger_enabled on;

                # The entry point is server.js, not app.js. Tell Passenger
                # about this.
                passenger_app_type node;
                passenger_startup_file main.js;

                # The static assets are in `static_files` instead, so tell Nginx about it.
                root /home/ubuntu/admin/snaps/current/programs/web.browser/app;

                # There is no `tmp` dir. No problem, we can tell Passenger
                # to look for restart.txt in /webapps/foo instead.
                passenger_restart_dir /home/ubuntu/admin/snaps/current/tmp;
        }
        
        #pre start admin/ first start admin
        passenger_pre_start http://#HOST_IP#:3050;

        #passenger_sticky_sessions on;

        #passenger_log_level 1;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # nginx-naxsi config
        ##
        # Uncomment it if you installed nginx-naxsi
        ##

        # include /etc/nginx/naxsi_core.rules;

        ##
        # Phusion Passenger config
        ##
        # Uncomment it if you installed passenger or passenger-enterprise
        ##

         passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
         passenger_ruby /usr/bin/ruby;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        # include /etc/nginx/sites-enabled/*;
}


# mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
# }